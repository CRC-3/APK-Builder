name: Android APK Builder

on:
  workflow_dispatch:
    inputs:
      module:
        description: "Optional Gradle module to assemble (e.g., app)"
        required: false
        default: ""
  push:
    branches: [ main, master ]
    paths:
      - "**.zip"
      - ".github/workflows/android-build.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (verify ZIP is present)
        run: |
          echo "Branch: $GITHUB_REF"
          pwd && ls -la
          echo "---- zips ----"
          ls -la zips || true

      - name: Find and extract app ZIP
        id: unzip
        shell: bash
        run: |
          set -e
          shopt -s nullglob
          zips=(./*.zip ./zips/*.zip)
          echo "Found these ZIPs: ${zips[@]}"
          if (( ${#zips[@]} )); then
            mkdir -p source
            unzip -q "${zips[0]}" -d source
            entries=(source/*)
            if [ ${#entries[@]} -eq 1 ] && [ -d "${entries[0]}" ]; then
              mv "${entries[0]}" project && rmdir source
            else
              mv source project
            fi
            echo "project_dir=project" >> "$GITHUB_OUTPUT"
          else
            echo "No ZIP found in repo root or zips/. Failing fast."
            exit 1
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install Android SDK
        uses: android-actions/setup-android@v3
        with:
          distribution: "commandlinetools"

      - name: Accept licenses & install SDK 34 + build-tools
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      # Use portable Gradle 8.6 (matches AGP 8.4.x in the app ZIP)
      - name: Install Gradle 8.6 (portable)
        shell: bash
        run: |
          set -e
          GRADLE_VERSION=8.6
          curl -L -o gradle.zip "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip"
          unzip -q gradle.zip
          echo "$PWD/gradle-${GRADLE_VERSION}/bin" >> $GITHUB_PATH

      - name: Show Java/Gradle versions
        working-directory: ${{ steps.unzip.outputs.project_dir }}
        run: |
          java -version
          gradle --version

      - name: Build Debug APK (verbose, no wrapper)
        working-directory: ${{ steps.unzip.outputs.project_dir }}
        run: |
          set -e
          if [ -n "${{ github.event.inputs.module }}" ]; then
            gradle ${{ github.event.inputs.module }}:assembleDebug --stacktrace --info --no-daemon
          else
            gradle assembleDebug --stacktrace --info --no-daemon
          fi

      - name: Collect build outputs
        id: collect
        working-directory: ${{ steps.unzip.outputs.project_dir }}
        shell: bash
        run: |
          set -e
          mkdir -p "$GITHUB_WORKSPACE/artifacts" "$GITHUB_WORKSPACE/reports"
          find . -type f \( -name "*.apk" -o -name "*.aab" \) -print0 | xargs -0 -I{} cp "{}" "$GITHUB_WORKSPACE/artifacts/" || true
          find . -type d -path "*/build/reports" -exec cp -r {} "$GITHUB_WORKSPACE/reports/" \; || true
          count=$(ls -1 "$GITHUB_WORKSPACE/artifacts" 2>/dev/null | wc -l | xargs)
          echo "found=$count" >> "$GITHUB_OUTPUT"

      - name: Upload APK/AAB artifacts
        if: steps.collect.outputs.found != '0'
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ github.sha }}
          path: artifacts
          if-no-files-found: error
          retention-days: 30

      - name: Upload build reports
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ github.sha }}
          path: reports
          if-no-files-found: ignore
          retention-days: 14
